

 +--------------+
 |      vr      |
 |				|
 +------|-------+
 		|
 		|tunnel
 +------|-------+ tunnel+-----------+
 |   compute    |-------| compute   |
 |				|		| 			|
 +--------------+		+-----------+



default setup
-- [flowmod]{table=FLOW_TABLE_EGRESSACL,priority=lowest}[match]{}[instruction]{goto_table=FLOW_TABLE_FLOWS}
-- [flowmod]{table=FLOW_TABLE_INGRESSACL,priority=lowest}[match]{} [instruction]{apply_action:resubmit=FLOW_TABLE_DISPATCHER}
-- [flowmod]{table=FLOW_TABLE_ARPRESP,priority=drop}[match]{}[instruction]{goto_table=FLOW_TABLE_DROP;apply_action:set_reg8=FLOW_TABLE_ARPRESP}
-- [flowmod]{table=FLOW_TABLE_CLASSIFIER,priority=drop}[match]{}[instruction]{goto_table=FLOW_TABLE_DROP;apply_action:set_reg8=FLOW_TABLE_CLASSIFIER}
-- [flowmod]{table=FLOW_TABLE_DHCPRESP,priority=drop}[match]{}[instruction]{goto_table=FLOW_TABLE_DROP;apply_action:set_reg8=FLOW_TABLE_DHCPRESP}
-- [flowmod]{table=FLOW_TABLE_DISPATCHER,priority=lowest}[match]{}[instruction]{goto_table=FLOW_TABLE_NLBNAT}
-- [flowmod]{table=FLOW_TABLE_DISPATCHER,priority=low}[match]{}[instruction]{mac_proto=ETH_PROTO_ARP}[instruction]{goto_table=FLOW_TABLE_ARPRESP}
-- [flowmod]{table=FLOW_TABLE_DISPATCHER,priority=low}[match]{mac_proto=ETH_PROTO_IPV4,ip_proto=IP_PROTO_UDP,src_udp_port=68,dst_udp_port=67}[instruction]{goto_table=FLOW_TABLE_DHCPRESP}
-- [flowmod]{table=FLOW_TABLE_DISPATCHER,priority=low}[match]{mac_proto=ETH_PROTO_IPV6,ip_proto=IP_PROTO_UDP,src_udp_port=UDP_PORT_DHCPV6_CLIENT,dst_udp_port=UDP_PORT_DHCPV6_SERVER}[instruction]{goto_table=FLOW_TABLE_DHCPRESP}
-- [flowmod]{table=FLOW_TABLE_DISPATCHER,priority=low}[match]{mac_proto=ETH_PROTO_IPV6,ip_proto=IP_PROTO_ICMP6,icmpv6_type=ICMP6_TYPE_RS}[instruction]{goto_table=FLOW_TABLE_IPV6_ND}
-- [flowmod]{table=FLOW_TABLE_DISPATCHER,priority=low}[match]{mac_proto=ETH_PROTO_IPV6,ip_proto=IP_PROTO_ICMP6,icmpv6_type=ICMP6_TYPE_NS}[instruction]{goto_table=FLOW_TABLE_IPV6_ND}
-- [flowmod]{table=FLOW_TABLE_DROP,priority=drop}[match]{}[instruction]{}
-- [flowmod]{table=FLOW_TABLE_L2LOOKUP,priority=drop}[match]{}[instruction]{goto_table=FLOW_TABLE_DROP;apply_action:set_reg8=FLOW_TABLE_L2LOOKUP}
-- [flowmod]{table=FLOW_TABLE_L3CHECK,priority=normal}[match]{mac_proto=ETH_PROTO_IPV4,ip_ttl=1}[instruction]{}
-- [flowmod]{table=FLOW_TABLE_L3CHECK,priority=normal}[match]{mac_proto=ETH_PROTO_IPV4,ip_ttl=0}[instruction]{}
-- [flowmod]{table=FLOW_TABLE_L3CHECK,priority=normal}[match]{mac_proto=ETH_PROTO_IPV6,ip_ttl=1}[instruction]{}
-- [flowmod]{table=FLOW_TABLE_L3CHECK,priority=normal}[match]{mac_proto=ETH_PROTO_IPV6,ip_ttl=0}[instruction]{}
-- [flowmod]{table=FLOW_TABLE_L3CHECK,priority=normal}[match]{}[instruction]{goto_table=FLOW_TABLE_EGRESSACL}
-- [flowmod]{table=FLOW_TABLE_L3INPUT,priority=lowest}[match]{}[instruction]{goto_table=FLOW_TABLE_L3CHECK}
-- [flowmod]{table=FLOW_TABLE_PINGRESP,priority=low}[match]{mac_proto=ETH_PROTO_IPV4,ip_proto=IP_PROTO_ICMP,icmp_type=ICMP_TYPE_REQ,icmp_code=ICMP_CODE_ECHO}[instruction]{apply_action:move=src_mac->reg8(len=32),src_mac->reg9(fs=33,len=16),move=dst_mac->src_mac,move=reg8->dst_mac(len=32),move=reg9->dst_mac(ts=33,len=16),move=src_ip->reg8,move=dst_ip->src_ip(len=32),move=reg8->dst_ip(len=32),set_ip_ttl=64,icmp_type=ICMP_TYPE_REPLY,output=in_port}
-- [flowmod]{table=FLOW_TABLE_L3LOCAL,priority=lowest}[match]{mac_proto=ETH_PROTO_IPV4}[instruction]{apply_action:resubmit=FLOW_TABLE_OUTPUT}
-- [flowmod]{table=FLOW_TABLE_L3LOCAL,priority=lowest}[match]{mac_proto=ETH_PROTO_IPV6}[instruction]{apply_action:resubmit=FLOW_TABLE_OUTPUT}
-- [flowmod]{table=FLOW_TABLE_L3LOCAL,priority=drop}[match]{}[instruction]{goto_table=FLOW_TABLE_DROP;apply_action:set_reg8=FLOW_TABLE_L3LOCAL}
-- [flowmod]{table=FLOW_TABLE_L3LOOKUP,priority=drop}[match]{}[instruction]{goto_table=FLOW_TABLE_DROP;apply_action:set_reg8=FLOW_TABLE_L3LOOKUP}
-- ovs command : create tap_metadata
-- ovs command : create tap_proxy
-- exec ip_tables
-- listen tap_metadata
-- listen kms
-- [flowmod]{table=FLOW_TABLE_CLASSIFIER,priority=low}[match]{in_port=tap_metadata.ofPort}[instruction]{goto_table=FLOW_TABLE_METADATAPROXYREPLAY}
-- [flowmod]{table=FLOW_TABLE_CLASSIFIER,priority=low}[match]{in_port=tap_proxy_ns.ofPort}[instruction]{goto_table=FLOW_TABLE_METADATAPROXYREPLAY}
-- [flowmod]{table=FLOW_TABLE_PORTSEC,priority=normal}[match]{mac_proto=ETH_PROTO_IPV4,dst_ip=proxy.requestIp,ip_proto=IP_PROTO_TCP,src_tcp_port=proxy.requestPort}[instruction]{goto_table=FLOW_TABLE_DISPATCHER}
-- [flowmod]{table=FLOW_TABLE_PORTSEC,priority=normal}[match]{mac_proto=ETH_PROTO_IPV4,dst_ip=proxy.requestIp,ip_proto=IP_PROTO_UDP,src_udp_port=proxy.requestPort}[instruction]{goto_table=FLOW_TABLE_DISPATCHER}
-- [flowmod]{table=FLOW_TABLE_DISPATCHER,priority=normal}[match]{mac_proto=ETH_PROTO_IPV4,dst_ip=proxy.requestIp,ip_proto=IP_PROTO_TDP,src_tcp_port=proxy.requestPort}[instruction]{goto_table=FLOW_TABLE_METADATAPROXY}
-- [flowmod]{table=FLOW_TABLE_DISPATCHER,priority=normal}[match]{mac_proto=ETH_PROTO_IPV4,dst_ip=proxy.requestIp,ip_proto=IP_PROTO_UDP,src_udp_port=proxy.requestPort}[instruction]{goto_table=FLOW_TABLE_METADATAPROXY}
-- [flowmod]{table=FLOW_TABLE_METADATAPROXY,priority=lowest}[match]{mac_proto=ETH_PROTO_IPV4,dst_ip=proxy.requestIp,ip_proto=IP_PROTO_TCP,src_tcp_port=proxy.requestPort}[instruction]{goto_table=FLOW_TABLE_METADATALEARN;apply_action:set_dst_mac=proxy.targetMac,set_src_tcp_port=proxy.realPort,*set_dst_ip=proxy.realIp}
-- [flowmod]{table=FLOW_TABLE_METADATAPROXY,priority=lowest}[match]{mac_proto=ETH_PROTO_IPV4,dst_ip=proxy.requestIp,ip_proto=IP_PROTO_UDP,src_udp_port=proxy.requestPort}[instruction]{goto_table=FLOW_TABLE_METADATALEARN;apply_action:set_dst_mac=proxy.targetMac,set_src_tcp_port=proxy.realPort,*set_dst_ip=proxy.realIp}
-- [flowmod]{table=FLOW_TABLE_METADATALEARN,priority=normal}[match]{mac_proto=ETH_PROTO_IPV4,dst_ip=proxy.realIp,ip_proto=IP_PROTO_TCP,src_tcp_port=proxy.realPort}[instruction]{apply_action:move=reg6->src_ip,load="0x8000"->src_ip(ts=17,te=32),output=proxy.tap.ofPort}
-- [flowmod]{table=FLOW_TABLE_METADATALEARN,priority=normal}[match]{mac_proto=ETH_PROTO_IPV4,dst_ip=proxy.realIp,ip_proto=IP_PROTO_UDP,src_udp_port=proxy.realPort}[instruction]{apply_action:move=reg6->src_ip,load="0x8000"->src_ip(ts=17,te=32),output=proxy.tap.ofPort}
-- [flowmod]{table=FLOW_TABLE_PORTSEC,priority=normal}[match]{mac_proto=ETH_PROTO_IPV4,dst_ip=proxy.requestIp,ip_proto=IP_PROTO_TCP,dst_tcp_port=proxy.requestPort}[instruction]{goto_table=FLOW_TABLE_DISPATCHER}
-- [flowmod]{table=FLOW_TABLE_PORTSEC,priority=normal}[match]{mac_proto=ETH_PROTO_IPV4,dst_ip=proxy.requestIp,ip_proto=IP_PROTO_UDP,dst_udp_port=proxy.requestPort}[instruction]{goto_table=FLOW_TABLE_DISPATCHER}
-- [flowmod]{table=FLOW_TABLE_DISPATCHER,priority=normal}[match]{mac_proto=ETH_PROTO_IPV4,dst_ip=proxy.requestIp,ip_proto=IP_PROTO_TCP,dst_tcp_port=proxy.requestPort}[instruction]{goto_table=FLOW_TABLE_METADATAPROXY}
-- [flowmod]{table=FLOW_TABLE_DISPATCHER,priority=normal}[match]{mac_proto=ETH_PROTO_IPV4,dst_ip=proxy.requestIp,ip_proto=IP_PROTO_UDP,dst_udp_port=proxy.requestPort}[instruction]{goto_table=FLOW_TABLE_METADATAPROXY}
-- [flowmod]{table=FLOW_TABLE_METADATAPROXY,priority=low}[match]{mac_proto=ETH_PROTO_IPV4,dst_ip=proxy.requestIp,ip_proto=IP_PROTO_TCP,dst_tcp_port=proxy.requestPort}[instruction]{goto_table=FLOW_TABLE_METADATALEARN;apply_action:set_dst_mac=proxy.tapMac,set_dst_tcp_port=proxy.realPort,*set_dst_ip=proxy.realIp}
-- [flowmod]{table=FLOW_TABLE_METADATAPROXY,priority=low}[match]{mac_proto=ETH_PROTO_IPV4,dst_ip=proxy.requestIp,ip_proto=IP_PROTO_UDP,dst_udp_port=proxy.requestPort}[instruction]{goto_table=FLOW_TABLE_METADATALEARN;apply_action:set_dst_mac=proxy.tapMac,set_dst_tcp_port=proxy.realPort,*set_dst_ip=proxy.realIp}
-- [flowmod]{table=FLOW_TABLE_METADATALEARN,priority=high}[match]{mac_proto=ETH_PROTO_IPV4,dst_ip=proxy.realIp,ip_proto=IP_PROTO_TCP,dst_tcp_port=proxy.realPort}[instruction]{apply_action:move=reg6->src_ip,load="0x8000"->src_ip(ts=17.te=32),output=proxy.tap.ofPort}
-- [flowmod]{table=FLOW_TABLE_METADATALEARN,priority=high}[match]{mac_proto=ETH_PROTO_IPV4,dst_ip=proxy.realIp,ip_proto=IP_PROTO_UDP,dst_udp_port=proxy.realPort}[instruction]{apply_action:move=reg6->src_ip,load="0x8000"->src_ip(ts=17.te=32),output=proxy.tap.ofPort}
-- [flowmod]{table=FLOW_TABLE_ARPRESP,priority=low}[match]{mac_proto=ETH_PROTO_ARP,dst_arp_ip=proxy.requestIp,arp_op=ARP_OP_REQ}[instruction]{move=src_mac->dst_mac,move=src_arp_mac->dst_arp_mac,src_arp_ip->dst_arp_ip,set_src_mac=proxy.targetMac,set_src_arp_mac=proxy.targetMac,set_src_arp_ip=proxy.requestIp,set_arp_op=ARP_OP_REPLY,output=in_port}
-- [flowmod]{table=FLOW_TABLE_METADATAPROXY,priority=drop}[match]{}[instruction]{goto_table=FLOW_TABLE_DROP;apply_action:set_reg8=FLOW_TABLE_METADATAPROXY}
-- [flowmod]{table=FLOW_TABLE_IPV6_ND,priority=drop}[match]{}[instruction]{goto_table=FLOW_TABLE_DROP;apply_action:set_reg8=FLOW_TABLE_IPV6_ND}
-- [flowmod]{table=FLOW_TABLE_NLBNAT,priority=lowest}[match]{}[instruction]{goto_table=FLOW_TABLE_L2LOOKUP}
-- [flowmod]{table=FLOW_TABLE_BNLB,priority=drop}[match]{}[instruction]{goto_table=FLOW_TABLE_DROP;apply_action:set_reg8=FLOW_TABLE_BNLB}
-- [flowmod]{table=FLOW_TABLE_OUTPUT,priority=drop}[match]{}[instruction]{goto_table=FLOW_TABLE_DROP;apply_action:set_reg8=FLOW_TABLE_OUTPUT}
-- [flowmod]{table=FLOW_TABLE_PORTSEC,priority=drop}[match]{}[instruction]{goto_table=FLOW_TABLE_DROP;apply_action:set_reg8=FLOW_TABLE_PORTSEC}
-- [flowmod]{table=FLOW_TABLE_FLOWS,priority=lowest}[match]{}[instruction]{goto_table=FLOW_TABLE_FIB}
-- [flowmod]{table=FLOW_TABLE_FIB,priority=lowest}[match]{}[instruction]{apply_action:resubmit=FLOW_TABLE_OUTPUT}
-- [flowmod]{table=FLOW_TABLE_RTEND,priority=lowest}[match]{}[instruction]{apply_action:resubmit=FLOW_TABLE_INGRESSACL}
-- [pkgout]{type=RA}[Inport]{port=localPort.ofPort}[Data]{Ethernet:hw_src=dhcpPort.subnet.gwPort.flow6.mac,proto_type=PROTO_TYPE_IPv6,hw_dst="33:33:00:00:00:01",data=ipv6:len=ip.len,version=4,traffic_class=IPV6_TRAFFIC_CLASS_DEFAULT,flow_table=0,next_header=IPV6_NEXT_HEADER_ICMPV6,hop_limit=IPV6_HOP_LIMIT_MAX,src_ip=dhcpPort.subnet.gwPort.flow6.fixip,dst_ip="FF02::1",data=icmp6:m_flag=RA_MANAGEMENT_FLAG_DHCP,o_flag=RA_OTHER_FLAG_NODHCP,router_life_time=config.routerLifeTime,link_address_option=(mac=dhcp.subnet.gwPort.flow6.mac,type=OPTION_TYPE_LINK_ADDRESS_SOURCE),prefix_option=(l_flag=PREFIX_ONLINK_FLAG_ON,a_flag=PREFIX_AUTONOMOUS_FLAG_UNAUTO,preferred_time=config.dhcpLease,prefix=dhcpInfo.subnet.network6)}[Action]{output=in_port}
-- [flowmod]{table=FLOW_TABLE_EGRESSCT,priority=highest}[match]{mac_proto=ETH_PROTO_IPV4,ip_fragment=IPFragmentNoFirstFragment}[instruction]{goto_table=FLOW_TABLE_DISPATCHER}
-- [flowmod]{table=FLOW_TABLE_INGRESSCT,priority=highest}[match]{mac_proto=ETH_PROTO_IPV4,ip_fragment=IPFragmentNoFirstFragment}[instruction]{goto_table=FLOW_TABLE_OUTPUT}
-- [flowmod]{table=FLOW_TABLE_EGRESSCT,priority=high}[match]{mac_proto=ETH_PROTO_IPV4,ip_proto=SG_RULE_PROTOCOL_ICMP}[instruction]{apply_action:connection_track=(table_id=FLOW_TABLE_EGRESSCTSG,field=reg6(s=1,e=16))}
-- [flowmod]{table=FLOW_TABLE_EGRESSCT,priority=high}[match]{mac_proto=ETH_PROTO_IPV4,ip_proto=SG_RULE_PROTOCOL_TCP}[instruction]{apply_action:connection_track=(table_id=FLOW_TABLE_EGRESSCTSG,field=reg6(s=1,e=16))}
-- [flowmod]{table=FLOW_TABLE_EGRESSCT,priority=high}[match]{mac_proto=ETH_PROTO_IPV4,ip_proto=SG_RULE_PROTOCOL_UDP}[instruction]{apply_action:connection_track=(table_id=FLOW_TABLE_EGRESSCTSG,field=reg6(s=1,e=16))}
-- [flowmod]{table=FLOW_TABLE_INGRESSCT,priority=high}[match]{mac_proto=ETH_PROTO_IPV4,ip_proto=SG_RULE_PROTOCOL_ICMP}[instruction]{apply_action:connection_track=(table_id=FLOW_TABLE_INGRESSCTSG,field=reg6(s=1,e=16))}
-- [flowmod]{table=FLOW_TABLE_INGRESSCT,priority=high}[match]{mac_proto=ETH_PROTO_IPV4,ip_proto=SG_RULE_PROTOCOL_TCP}[instruction]{apply_action:connection_track=(table_id=FLOW_TABLE_INGRESSCTSG,field=reg6(s=1,e=16))}
-- [flowmod]{table=FLOW_TABLE_INGRESSCT,priority=high}[match]{mac_proto=ETH_PROTO_IPV4,ip_proto=SG_RULE_PROTOCOL_UDP}[instruction]{apply_action:connection_track=(table_id=FLOW_TABLE_INGRESSCTSG,field=reg6(s=1,e=16))}
-- [flowmod]{table=FLOW_TABLE_EGRESSCTSG,priority=high}[match]{connect_track_status=(ConnectionEstablished,ConnectionTracked),connect_track_status_mask=(ConnectionTracked,ConnectionInvalid,ConnectionRelated,ConnectionEstablished,ConnectionNew)}[instruction]{goto_table=FLOW_TABLE_DISPATCHER;apply_action:move=ConnectTrackMark->reg11,move=ConnectTrackLabel->XXRegister0}
-- [flowmod]{table=FLOW_TABLE_EGRESSCTSG,priority=high}[match]{connect_track_status=(ConnectionRelated,ConnectionTracked),connect_track_status_mask=(ConnectionTracked,ConnectionInvalid,ConnectionRelated,ConnectionNew)}[instruction]{goto_table=FLOW_TABLE_DISPATCHER}
-- [flowmod]{table=FLOW_TABLE_EGRESSCTSG,priority=high}[match]{connect_track_status=(ConnectionNew,ConnectionRelated,ConnectionTracked),connect_track_status_mask=(ConnectionTracked,ConnectionInvalid,ConnectionRelated,ConnectionNew),mac_proro=ETH_PROTO_IPV4}[instruction]{apply_action:connect_track=(is_commit=true,table_id=FLOW_TABLE_DISPATCHER,field=ConnectTrackZone)}
-- [flowmod]{table=FLOW_TABLE_EGRESSCTSG,priority=high}[match]{connect_track_status=(ConnectionInvalid,ConnectionTracked),connect_track_status_mask=(ConnectionInvalid,ConnectionTracked)}[instruction]{goto_table=FLOW_TABLE_DROP;apply_action:set_reg8=FLOW_TABLE_DISPATCHER}
-- [flowmod]{table=FLOW_TABLE_INGRESSCTSG,priority=high}[match]{connect_track_status=(ConnectionEstablished,ConnectionTracked),connect_track_status_mask=(ConnectionTracked,ConnectionInvalid,ConnectionRelated,ConnectionEstablished,ConnectionNew)}[instruction]{goto_table=FLOW_TABLE_OUTPUT}
-- [flowmod]{table=FLOW_TABLE_INGRESSCTSG,priority=high}[match]{connect_track_status=(ConnectionRelated,ConnectionTracked),connect_track_status_mask=(ConnectionTracked,ConnectionInvalid,ConnectionRelated,ConnectionNew)}[instruction]{goto_table=FLOW_TABLE_OUTPUT}
-- [flowmod]{table=FLOW_TABLE_INGRESSCTSG,priority=high}[match]{connect_track_status=(ConnectionNew,ConnectionRelated,ConnectionTracked),connect_track_status_mask=(ConnectionTracked,ConnectionInvalid,ConnectionRelated,ConnectionNew),mac_proro=ETH_PROTO_IPV4}[instruction]{apply_action:connect_track=(is_commit=true,table_id=FLOW_TABLE_OUTPUT,field=ConnectTrackZone)}
-- [flowmod]{table=FLOW_TABLE_INGRESSCTSG,priority=high}[match]{connect_track_status=(ConnectionInvalid,ConnectionTracked),connect_track_status_mask=(ConnectionInvalid,ConnectionTracked)}[instruction]{goto_table=FLOW_TABLE_DROP;apply_action:set_reg8=FLOW_TABLE_OUTPUT}
-- [flowmod]{table=FLOW_TABLE_EGRESSCT,priority=highest}[match]{mac_proto=ETH_PROTO_IPV6}[instruction]{goto_table=FLOW_TABLE_DISPATCHER}
-- [flowmod]{table=FLOW_TABLE_INGRESSCT,priority=highest}[match]{mac_proto=ETH_PROTO_IPV6}[instruction]{goto_table=FLOW_TABLE_OUTPUT}
-- [flowmod]{table=FLOW_TABLE_EGRESSCT,priority=drop}[match]{}[instruction]{goto_table=FLOW_TABLE_DROP;apply_action:set_reg8=FLOW_TABLE_EGRESSCT}
-- [flowmod]{table=FLOW_TABLE_EGRESSCTSG,priority=drop}[match]{}[instruction]{goto_table=FLOW_TABLE_DROP;apply_action:set_reg8=FLOW_TABLE_EGRESSCTSG}
-- [flowmod]{table=FLOW_TABLE_INGRESSCT,priority=drop}[match]{}[instruction]{goto_table=FLOW_TABLE_DROP;apply_action:set_reg8=FLOW_TABLE_INGRESSCT}
-- [flowmod]{table=FLOW_TABLE_INGRESSCTSG,priority=drop}[match]{}[instruction]{goto_table=FLOW_TABLE_DROP;apply_action:set_reg8=FLOW_TABLE_INGRESSCTSG}


router
--flowGenerator.UpdateRouterCache
	--flowGenerator.updateRouter
		--flowGenerator.deleteTunnelCache
			-- ovscommand : ovs-vsctl del-port
		--flowGenerator.updateTunnelCache
		    -- [flowmod]{table=FLOW_TABLE_CLASSIFIER,priority=low}[match]{in_port=tunnel.ofPort}[instruction]{goto_table=FLOW_TABLE_L3LOOKUP}
			-- ovscommand : ovs-vsctl --may-exist add-port %s %s -- set interface %s type=vxlan options:remote_ip=%s options:key=flow
			-- [flowmod]{table=FLOW_TABLE_OUTPUT,priority=low}[match]{reg7=tunnel.ofPort}[instruction]{output=tunnel.ofPort}
		--pipeline.UpdateRouter
			-- [group]{group_id=nlb_pool.group_id,slect,hash=nlb_pool}[bucket for nlb_pool.targets]{action:set_metadata=nlb_pool.target.metadata,set_dst_mac=nlb_pool.target.mac,resubmit=FLOW_TABLE_L2LOOKUP}
			-- [group]{group_id=router.vni,select}[bucket for n.EgressRouters]{action:output=tunnel ofport}
	--flowGenerator.deleteSubnet
	    --pipeline.DeleteSubnet
	        -- unuse
    --flowGenerator.updateSubnet
        --pipeline.UpdateSubent
            -- [flowmod]{table=FLOW_TABLE_ARPRESP,priority=low}[match]{mac_proto=ETH_PROTO_ARP,metadata=subnet.metadata,arp_dst_ip=subnet.gateway,arp_op=ARP_OP_REQ}[instruction]{apply_action:move=src_mac->dst_mac,move=arp_src_mac->arp_dst_mac,move=arp_src_ip->arp_dst_ip,set_src_mac=subnet.gwmac,set_arp_src_mac=subnet.gwmac,set_arp_scr_ip=subnet.gwip,set_arp_op=ARP_OP_REPLY,output=inport}
            -- [flowmod]{table=FLOW_TABLE_L2LOOKUP,priority=low}[match]{metadata=subnet.metadata,dst_mac=subnet.gwmac}[instruction]{goto_table:FLOW_TABLE_L3INPUT}
            -- [flowmod]{table=FLOW_TABLE_L2LOOKUP,priority=low}[match]{metadata=subnet.metadata,dst_mac=flow.mac}[instruction]{goto_table:FLOW_TABLE_OUTPUT;apply_action:set_tunnel_id=subnet.vni,set_reg7=flow.remote.ofport}
            -- [flowmod]{table=FLOW_TABLE_L3INPUT,priority=low}[match]{metadata=subnet.metadata,mac_proto=ETH_PROTO_IPV4,dst_ip=subnet.gwip}[instruction]{goto_table:FLOW_TABLE_L3LOCAL}
            -- [flowmod]{table=FLOW_TABLE_L3INPUT,priority=low}[match]{metadata=subnet.metadata,mac_proto=ETH_PROTO_IPV6,dst_ipv6=subnet.gwipv6}[instruction]{goto_table:FLOW_TABLE_L3LOCAL}
            -- [flowmod]{table=FLOW_TABLE_IPV6_ND,priority=low}[match]{metadata=subnet.metadata,mac_proto=ETH_PROTO_IPV6,ip_proto=IP_PROTO_ICMP6,icmpv6_type=ICMP6_TYPE_NS,ipv6_nd_target=subnet.gwipv6}[instruction]{apply_action:set_dst_mac=subnet.gwmac,resubmit=FLOW_TABLE_OUTPUT}
            -- [flowmod]{table=FLOW_TABLE_IPV6_ND,priority=low}[match]{metadata=subnet.metadata,mac_proto=ETH_PROTO_IPV6,ip_proto=IP_PROTO_ICMP6,icmpv6_type=ICMP6_TYPE_NS,ipv6_nd_target=flowv6.fixip}[instruction]{goto_table:FLOW_TABLE_OUTPUT;apply_action:set_reg7=flowv6.remote.ofport,set_tunnel_id=subnet.vni}
            -- [flowmod]{table=FLOW_TABLE_OUTPUT,priority=low}[match]{metadata=subnet.metadata,dst_mac=subent.gwmac}[instruction]{apply_action:set_tunnel_id=subnet.vni,output=group(subent.vni)}
            -- [flowmod]{table=FLOW_TABLE_FLOWS,priority=low}[match]{reg5=subnet.vni,mac_proto=ETH_PROTO_IPV4,dst_ip=flow.fixip}[instruction]{goto_table:FLOW_TABLE_RTEND;write_metadata:subnet.metadata;apply_action:set_dst_mac=flow.mac,set_src_mac=subnet.gwmac,is_dec_ip_ttl=true}
            -- [flowmod]{table=FLOW_TABLE_FLOWS,priority=low}[match]{reg5=subnet.vni,mac_proto=ETH_PROTO_IPV6,dst_ipv6=flow6.fixip}[instruction]{goto_table:FLOW_TABLE_RTEND;write_medata:subnet.metadata;apply_action:set_dst_mac=flow6.mac,set_src_mac=subnet.gwmac,is_dec_ip_ttl=true}
            -- [flowmod]{table=FLOW_TABLE_IPV6_ND,priority=low}[match]{metadata=subnet.metadata,mac_proto=ETH_PROTO_IPV6,ip_proto=IP_PROTO_ICMP6,icmpv6_type=ICMP6_TYPE_RS,dst_ipv6=IPV6_MULTICAST_ALL_ROUTERS(FF02::2)}[instruction]{apply_action:output=controller}
    --flowGenerator.deleteAcl
        --pipeline.DeleteAcl
            -- unuse
    --flowGenerator.updateAcl
        --pipeline.UpdateAcl
            -- [flowmod]{table=FLOW_TABLE_INGRESSACL,priority=0xffff-acl.rule.priority}[match]{acl.rule}[instruction]{apply_action:resubmit=FLOW_TABLE_DISPATCHER}
            -- [flowmod]{table=FLOW_TABLE_EGRESSACL,priority=0xffff-acl.rule.priority}[match]{acl.rule}[instruction]{apply_action:resubmit=FLOW_TABLE_FLOWS}
    --flowGenerator.deleteRouteTable
        --pipeline.DeleteRouteTable
            -- unuse
    --flowGenerator.updateRouteTable
        --pipeline.UpdateRouteTable
            -- user route_table_rule dont offload
    --flowGenerator.deleteBnlb
        --pipeline.DeleteBnlb
            -- unuse
    --flowGenerator.updateBnlb
        --pipeline.UpdateBnlb
            -- [flowmod]{table=FLOW_TABLE_L2LOOKUP,priority=normal}[match]{metadata=bnlb.metadata,dst_mac=bnlb.mac,mac_proto=ETH_PROTO_IPV4,dst_ip=bnlb.ip}[instruction]{apply_action:resubmit=FLOW_TABLE_BNLB}
            -- [flowmod]{table=FLOW_TABLE_L3INPUT,priority=low}[match]{reg5=bnlb.vni,mac_proto=ETH_PROTO_IPV4,ip_proto=IP_PROTO_ICMP,dst_ip=bnlb.ip}[instruction]{apply_action:resubmit=FLOW_TABLE_PINGRESP}
            -- [flowmod]{table=FLOW_TABLE_IPV6_ND,priority=low}[match]{metadata=bnlb.metadata,mac_proto=bnlb.ETH_PROTO_IPV6,ip_proto=IP_PROTO_ICMP6,icmpv6_type=ICMP6_TYPE_NS,ipv6_nd_target=bnlb.ipv6}[instruction]{apply_action:set_dst_mac=bnlb.gwmac,resubmit=FLOW_TABLE_OUTPUT}
            -- [flowmod]{table=FLOW_TABLE_BNLB,priority=low}[match]{metadata=bnlb.metadata,mac_proto=ETH_PROTO_IPV4,ip_proto=IP_PROTO_ICMP,dst_ip=bnlb.ip}[instruction]{goto_table:FLOW_TABLE_PINGRESP}
            -- [flowmod]{table=FLOW_TABLE_BNLB,priority=low}[match]{metadata=bnlb.metadata,dst_ip=bnlb.ip,mac_proto=ETH_PROTO_IPV4,ip_proto=bnlb.rule.protocol,dst_tcp_port=bnlb.rule.port}[instruction]{apply_action:output=group(bnlb.rule.group_id)}
            -- [flowmod]{table=FLOW_TABLE_BNLB,priority=low}[match]{metadata=bnlb.metadata,dst_ip=bnlb.ip,mac_proto=ETH_PROTO_IPV4,ip_proto=bnlb.rule.protocol}[instruction]{apply_action:output=group(bnlb.rule.group_id)}
            -- [flowmod]{table=FLOW_TABLE_FLOWS,priority=low}[match]{reg5=bnlb.vni,mac_proto=ETH_PROTO_IPV4,dst_ip=bnlb.ip}[instruction]{goto_table=FLOW_TABLE_RTEND;write_metadata=bnlb.metadata;apply_action:set_dst_mac=bnlb.mac,set_src_mac=bnlb.bnlb.gwmac,is_dec_ip_ttl=true}
            -- [flowmod]{table=FLOW_TABLE_FLOWS,priority=normal}[match]{reg5=bnlb.vni,mac_proto=ETH_PROTO_IPV4,reg3=bnlb.ip,reg11=NLBNAT_FWD}[instruction]{write_metadata:bnlb.metadata;goto_table:FLOW_TABLE_RTEND;set_src_mac=bnlb.mac,set_dst_mac=bnlb.gwmac,set_reg11=NLBNAT_FWD_END}

--DeleteRouterCache
    --flowGenerator.deleteSubnet
        --pipeline.DeleteSubnet
            -- unuse
    --flowGenerator.deleteAcl
        --pipeline.DeleteAcl
            -- unuse
    --flowGenerator.deleteRouteTable
        --pipeline.DeleteRouteTable
            -- unuse
    --flowGenerator.deleteBnlb
        --pipeline.DeleteBnlb
            -- unuse
    --flowGenerator.deleteRouter
        --pipeline.DeleteRouter
            -- unuse
        --flowGenerator.deleteTunnelCache
            --flowGenerator.deleteTunnel
                -- ovscommand : ovs-vsctl del-port

subnet
--flowGenerator.UpdateSubnetCache
    --flowGenerator.deleteDhcpPort
        --pipeline.DeleteDhcpPort
            -- [map]delete dhcpResp.info[dhcpPort.subnetMetadata]
            -- [map]delete routerAdvertisement.dhcpPorts[dhcpPort.subnetMetadata]
    --flowGenerator.updateDhcpPort
        --pipeline.UpdateDhcpPort
            -- [flowmod]{table=FLOW_TABLE_ARPRESP,priority=low}[match]{mac_proto=ETH_PROTO_ARP,metadata=dhcpPort.subnetMetadata,dst_arp_ip=dhcpPort.flow.ip,arp_op=ARP_OP_REQ}[instruction]{apply_action:move=src_mac->dst_mac,move=src_arp_mac->dst_arp_mac,move=src_arp_ip->dst_arp_ip,set_src_mac=dhcpPort.flow.mac,set_src_arp_mac=dhcpPort.flow.ip,set_arp_op=ARP_OP_REPLY,output=inport}
            -- [flowmod]{table=FLOW_TABLE_DHCPRESP,priority=low}[match]{metadata=dhcpPort.subnetMetadata,mac_proto=PROTO_TYPE_IPv4,ip_proto=IP_PROTO_UDP,src_udp_port=UDP_PORT_DHCP_CLIENT,dst_udp_port=UDP_PORT_DHCP_SERVER,dst_mac="ff:ff:ff:ff:ff:ff"}[instruction]{apply_action:output=controller}
            -- [flowmod]{table=FLOW_TABLE_DHCPRESP,priority=low}[match]{metadata=dhcpPort.subnetMetadata,mac_proto=PROTO_TYPE_IPv6,ip_proto=IP_PROTO_UDP,src_udp_port=UDP_PORT_DHCP_CLIENT,dst_udp_port=UDP_PORT_DHCP_SERVER,dst_mac="33:33:00:01:00:02"}[instruction]{apply_action:output=controller}
            -- [flowmod]{table=FLOW_TABLE_DHCPRESP,priority=low}[match]{metadata=dhcpPort.subnetMetadata,mac_proto=PROTO_TYPE_IPv4,ip_proto=IP_PROTO_UDP,src_udp_port=UDP_PORT_DHCP_CLIENT,dst_udp_port=UDP_PORT_DHCP_SERVER,dst_mac=dhcpPort.flow.mac}[instruction]{apply_action:output=controller}
            -- [flowmod]{table=FLOW_TABLE_DHCPRESP,priority=low}[match]{metadata=dhcpPort.subnetMetadata,mac_proto=PROTO_TYPE_IPv6,ip_proto=IP_PROTO_UDP,src_udp_port=UDP_PORT_DHCP_CLIENT,dst_udp_port=UDP_PORT_DHCP_SERVER,dst_mac=dhcpPort.flowv6.mac}[instruction]{apply_action:output=controller}
            -- [map]add routerAdvertisement[dhcoPort.subnetMetadata] = dhcoPort
    --flowGenerator.deleteLocalPort
        --pipeline.DeleteLocalPort
            -- [map]delete arpResp.localPorts[localPort.id]
            -- [map]delete metadata.metadataProxy[localPort.id]
            -- ovs command : ovs-vsctl del-port localPort.id
            -- [map]delete routerAdvertisement.localPorts[localPort.id]
    --flowGenerator.deleteRemotePort
        --pipeline.DeleteRemotePort
            -- [map]delete arpResp.remotePorts[remotePort.id]
    --flowGenerator.updateLocalPort
        --pipeline.UpdateLocalPort
            -- [flowmod]{table=FLOW_TABLE_ARPRESP,priority=low}[match]{mac_proto=ETH_PROTO_ARP,metadata=localPort.subnetMetadata,dst_arp_ip=localPort.flow.fixip,arp_op=ARP_OP_REQ}[instruction]{apply_action:move=src_mac->dst_mac,move=src_arp_mac->dst_arp_mac,move=src_arp_ip->dst_arp_ip,set_src_mac=localPort.flow.mac,set_src_arp_mac=localPort.flow.mac,set_srt_arp_ip=localPort.flow.ip,set_arp_op=ARP_OP_REPLY,output=inport}
            -- [pkgout]{type=GratuiousArp}[Inport]{port=0xfeff}[Data]{Ethernet:hw_dst="ff:ff:ff:ff:ff:ff",hw_src=localPort.flow.mac,proto_type=PROTO_TYPE_ARP(0x0806);ArpData:hw_src=localPort.flow.mac,ip_src=localPort.flow.fixip,hw_dst="ff:ff:ff:ff:ff:ff",ip_dst=localPort.flow.fixip}[Action]{output=localPort.ofPort}
            -- [flowmod]{table=FLOW_TABLE_CLASSIFIER,priority=normal}[match]{in_port=localPort.ofPort,src_mac=localPort.vni:00:00:00/ff:ff:ff:00:00:00}[instruction]{write_metadata=localPort.subnetMetadata;goto_table=FLOW_TABLE_PORTSEC}
            -- [flowmod]{table=FLOW_TABLE_CLASSIFIER,priority=low}[match]{in_port=localPort.ofPort}[instruction]{goto_table=FLOW_TABLE_L3LOOKUP; apply_action:move=src_mac->tunnel_id(fs=25,len=24),load="0xfa163e"->src_mac(ts=25,te=48),move=dst_mac->src_mac(fs=25,ts=25,len=16),load="0xfa163e"->dst_mac(ts=25,te=48),set_reg6=localPort.ofPort}
            -- [flowmod]{table=FLOW_TABLE_CLASSIFIER,priority=low}[match]{in_port=localPort.ofPort}[instruction]{write_metadata=localPort.subnetMetadata;goto_table=FLOW_TABLE_PORTSEC;apply_action:set_reg5=localPort.vni,set_reg6=localPort.ofPort}
            -- [flowmod]{table=FLOW_TABLE_L2LOOKUP,priority=low}[match]{metadata=localPort.subnetMetadata,dst_mac=localPort.flow.mac}[instruction]{goto_table=FLOW_TABLE_OUTPUT; apply_action:set_reg7=localPort.ofPort,set_tunnel_id=localPort.vni}
            -- [flowmod]{table=FLOW_TABLE_L2LOOKUP,priority=low}[match]{metadata=localPort.subnetMetadata,dst_mac=localPort.flow.mac}[instruction]{goto_table=FLOW_TABLE_INGRESSCT;apply_action:set_reg7=localPort.ofPort,set_tunnel_id=localPort.vni}
            -- [flowmod]{table=FLOW_TABLE_L3LOOKUP,priority=low}[match]{tunnel_id=localPort.vni,src_mac=localPort.flow.mac}[instruction]{goto_table=FLOW_TABLE_DISPATCHER; apply_action:set_reg5=localPort.vni,set_metadata=localPort.subnetMetadata}
            -- [flowmod]{table=FLOW_TABLE_L3LOOKUP,priority=lowest}[match]{mac_proto=ETH_PROTO_IPV6,tunnel_id=localPort.flow6.vni,dst_mac=localPort.flow6.mac}[instruction]{goto_table=FLOW_TABLE_DISPATCHER;apply_action:set_reg5=localPort.vni,set_metadata=localPort.subnetMetadata}
            -- [flowmod]{table=FLOW_TABLE_L3LOOKUP,priority=lowest}[match]{mac_proto=ETH_PROTO_IPV6,ip_proto=IP_PROTO_ICMP6,icmpv6_type=ICMP6_TYPE_NS,dst_ipv6=localPort.flow6.fixip}[instruction]{goto_table=FLOW_TABLE_DISPATCHER;apply_action:set_metadata=localPort.subnetMetadata}
            -- [flowmod]{table=FLOW_TABLE_L3LOOKUP,priority=lowest}[match]{mac_proto=ETH_PROTO_IPV6,ip_proto=IP_PROTO_ICMP6,icmpv6_type=ICMP6_TYPE_NA,dst_ipv6=localPort.flow6.fixip}[instruction]{goto_table=FLOW_TABLE_DISPATCHER;apply_action:set_metadata=localPort.subnetMetadata}
            -- [flowmod]{table=FLOW_TABLE_METADATAPROXYREPLAY,priority=lowest}[match]{mac_proto=ETH_PROTO_IPV4,ip_proto=IP_PROTO_TCP,dst_ip="128.0.ofPort",dst_tcp_port=localProxy.realPort}[instruction]{apply_action:set_src_ip=localPrixy.requestIp,set_dst_ip=localPort.flow.fixip,set_dst_tcp_port=localProxy.RequestPort; output=localPort.ofPort}
            -- [flowmod]{table=FLOW_TABLE_METADATAPROXYREPLAY,priority=lowest}[match]{mac_proto=ETH_PROTO_IPV4,ip_proto=IP_PROTO_UDP,dst_ip="128.0.ofPort",dst_udp_port=localProxy.realPort}[instruction]{apply_action:set_src_ip=localPrixy.requestIp,set_dst_ip=localPort.flow.fixip,set_dst_udp_port=localProxy.RequestPort,output=localPort.ofPort}
            -- [flowmod]{table=FLOW_TABLE_METADATAPROXYREPLAY,priority=low}[match]{mac_proto=ETH_PROTO_IPV4,ip_proto=IP_PROTO_TCP,dst_ip="128.0.ofPort",dst_tcp_port=localProxy.realPort}[instruction]{apply_action:set_src_ip=localProxy.requestIp,set_dst_ip=localPort.flow.fixip,set_src_tcp_port=localProxy.requestPort,output=localPort.ofPort}
            -- [flowmod]{table=FLOW_TABLE_METADATAPROXYREPLAY,priority=low}[match]{mac_proto=ETH_PROTO_IPV4,ip_proto=IP_PROTO_UDP,dst_ip="128.0.ofPort",dst_udp_port=localProxy.realPort}[instruction]{apply_action:set_src_ip=localProxy.requestIp,set_dst_ip=localPort.flow.fixip,set_src_udp_port=localProxy.requestPort,output=localPort.ofPort}
            -- [flowmod]{table=FLOW_TABLE_METADATAPROXYREPLAY,priority=low}[match]{mac_proto=ETH_PROTO_ARP,dst_arp_ip="128.0.ofPort",arp_op=ARP_OP_REQ}[instruction]{apply_action:move=src_mac->dst_mac,move=src_arp_mac->dst_arp_mac,move=src_arp_ip->dst_arp_ip,set_src_mac=localPort.flow.mac,set_src_arp_mac=localPort.flow.mac,set_src_arp_ip="128.0.ofPort",set_arp_op=ARP_OP_REPLY,output=in_port}
            -- [flowmod]{table=FLOW_TABLE_IPV6_ND,priority=low}[match]{metadata=localPort.subnetMetadata,mac_proto=ETH_PROTO_IPV6,ip_proto=IP_PROTO_ICMP6,icmpv6_type=ICMP6_TYPE_NS,*ipv6_nd_target=localPort.flow6.ofPort}[instruction]{goto_table=FLOW_TABLE_OUTPUT; apply_action=set_reg7=localPort.ofPort,set_tunnel_id=localPort.vni}
            -- ovs command : "ovs-vsctl -- --if-exists del-port %s -- add-port %s %s -- set Interface %s type=dpdkvhostuserclient -- set Interface %s options:vhost-server-path=/var/lib/openvswitch/%s -- set Interface %s external-ids:iface-status=active -- set Interface %s external-ids:attached-mac=%s
            -- [flowmod]{table=FLOW_TABLE_OUTPUT,priority=low}[match]{reg7=localPort.ofPort}[instruction]{apply_action:move=tunnel_id->src_mac(fs=1,ts=25,len=24),output=localPort.ofPort}
            -- [flowmod]{table=FLOW_TABLE_OUTPUT,priority=low}[match]{reg7=localPort.ofPort,metadata=localPort.subnetMetadata}[instruction]{apply_action:output=lcoalPort.ofPort}
            -- [flowmod]{table=FLOW_TABLE_PORTSEC,priority=low}[match]{in_port=localPort.ofPort,mac_proto=ETH_PROTO_IPV4,src_mac=localPort.priFlow.mac,*src_ip=localPort.priFlow.mac}[instruction]{goto_table=FLOW_TABLE_EGRESSCT}
            -- [flowmod]{table=FLOW_TABLE_PORTSEC,priority=low}[match]{in_port=localPort.ofPort,mac_proto=ETH_PROTO_ARP,src_mac=localPort.priFlow.mac,*src_arp_mac=localPort.priFlow.mac,*src_arp_ip=localPort.priFlow.fixip}[instruction]{goto_table=FLOW_TABLE_DISPATCHER}
            -- [flowmod]{table=FLOW_TABLE_PORTSEC,priority=normal}[match]{in_port=localPort.ofPort,mac_proto=ETH_PROTO_IPV4,src_mac=localPort.priFlow.mac,ip_proto=IP_PROTO_UDP,src_udp_port=UDP_PORT_DHCP_CLIENT,dst_udp_port=UDP_PORT_DHCP_SERVER}[instruction]{goto_table=FLOW_TABLE_DISPATCHER}
            -- [flowmod]{table=FLOW_TABLE_PORTSEC,priority=low}[match]{in_port=localPort.ofPort,mac_proto=ETH_PROTO_IPV6,src_mac=localPort.priFlowv6.mac,*src_ipv6=localPort.priFlowv6.fixip}[instruction]{goto_table=FLOW_TABLE_EGRESSCT}
            -- [map]add routerAdvertisement.localPorts[localPort.id]=localPort
            -- [flowmod]{table=FLOW_TABLE_EGRESSCTSG,priority=normal}[match]{mac_proto=ETH_PROTO_IPV4,reg6=localPort.ofPort,conjuction_id=localPort.ofPort}[instruction]{apply_action:action_connection_track=(is_commit=true,table_id=FLOW_TABLE_DISPATCHER,field=ConnectTrackZone)}
            -- [flowmod]{table=FLOW_TABLE_INGRESSCTSG,priority=normal}[match]{mac_proto=ETH_PROTO_IPV4,reg7=localPort.ofPort,conjuction_id=localPort.ofPort}[instruction]{apply_action:action_connection_track=(is_commit=true,table_id=FLOW_TABLE_OUTPUT,field=ConnectTrackZone),move=reg11->ConnectTrackMark,move=XXRegister0->ConnectTrackLabel}
            -- [flowmod]{table=FLOW_TABLE_EGRESSCTSG,priority=normal}[match]{connection_track_status=ConnectionNew+ConnectionTracked,connection_track_status_mask=ConnectionTracked,ConnectionInvalid,ConnectionRelated,ConnectionEstablished,ConnectionNew,reg6=localPort.ofPort}[instruction]{apply_action:action_conjuction=(clause=1,nclause=2,conjuction_id=localPort.ofPort)}
            -- [flowmod]{table=FLOW_TABLE_EGRESSCTSG,priority=normal}[match]{connection_track_status=ConnectionNew+ConnectionTracked,connection_track_status_mask=ConnectionTracked,ConnectionInvalid,ConnectionRelated,ConnectionEstablished,ConnectionNew,reg7=localPort.ofPort}[instruction]{apply_action:action_conjuction=(clause=1,nclause=2,conjuction_id=localPort.ofPort)}
            -- [flowmod]{table=FLOW_TABLE_EGRESSCTSG,priority=normal}[match]{mac_proto=ETH_PROTO_IPV4,reg6=localPort.ofPort,dst_ip=sgRule.ipPreFix,ip_proto=SG_RULE_PROTOCOL_TCP,*dst_tcp_port=portMask.start,*dst_tcp_port_mask=portMask.mask}[instruction]{apply_action:action_conjuction=(clause=2,nclause=2,conjuction_id=localPort.ofPort)}
            -- [flowmod]{table=FLOW_TABLE_EGRESSCTSG,priority=normal}[match]{mac_proto=ETH_PROTO_IPV4,reg6=localPort.ofPort,dst_ip=sgRule.ipPreFix,ip_proto=SG_RULE_PROTOCOL_UDP,*dst_udp_port=portMask.start,*dst_udp_port_mask=portMask.mask}[instruction]{apply_action:action_conjuction=(clause=2,nclause=2,conjuction_id=localPort.ofPort)}
            -- [flowmod]{table=FLOW_TABLE_EGRESSCT,priority=normal}[match]{mac_proto=ETH_PROTO_IPV4,reg6=localPort.ofPort,dst_ip=sgRule.ipPreFix}[instruction]{goto_table=FLOW_TABLE_DISPATCHER}
            -- [flowmod]{table=FLOW_TABLE_INGRESSCTSG,priority=normal}[match]{mac_proto=RTH_PROTO_IPV4,reg7=localPort.ofPort,src_ip=sgRule.ipPreFix,ip_proto=SG_RULE_PROTOCOL_TCP,*dst_tcp_port=portMask.start,*dst_tcp_port_mask=portMask.mask}[instruction]{apply_action:action_conjuction=(clause=2,nclause=2,conjuction_id=localPort.ofPort)}
            -- [flowmod]{table=FLOW_TABLE_INGRESSCTSG,priority=normal}[match]{mac_proto=RTH_PROTO_IPV4,reg7=localPort.ofPort,src_ip=sgRule.ipPreFix,ip_proto=SG_RULE_PROTOCOL_UDP,*dst_udp_port=portMask.start,*dst_udp_port_mask=portMask.mask}[instruction]{apply_action:action_conjuction=(clause=2,nclause=2,conjuction_id=localPort.ofPort)}
            -- [flowmod]{table=FLOW_TABLE_INGRESSCT,priority=normal}[match]{mac_proto=ETH_PROTO_IPV4,reg7=localPort.ofPort,src_ip=sgRule.ipPreFix}[instruction]{goto_table=FLOW_TABLE_OUTPUT}
    --flowGenerator.updateRemotePort
        --pipeline.UpdateRemotePort
            -- [flowmod]{table=FLOW_TABLE_ARPRESP,priority=low}[match]{mac_proto=ETH_PROTO_ARP,metadata=remotePort.subnetMetadata,dst_arp_id=remotePort.flow.fixip,arp_op=ARP_OP_REQ}[instruction]{apply_action:move=src_mac->dst_mac,move=src_arp_mac->dst_arp_mac,move=src_arp_ip->dst_arp_ip,set_src_mac=remotePort.flow.mac,set_src_arp_mac=remotePort.flow.mac,set_src_arp_ip=remotePort.flow.fixip,set_arp_op=ARP_OP_REPLY,output=in_port}
            -- [pkgout]{type=GratuiousArp}[Inport]{port=0xfeff}[Data]{Ethernet:hw_dst="ff:ff:ff:ff:ff:ff",hw_src=remotePort.flow.mac,proto_type=PROTO_TYPE_ARP(0x0806);ArpData:hw_src=remotePort.flow.mac,ip_src=remotePort.flow.fixip,hw_dst="ff:ff:ff:ff:ff:ff",ip_dst=remotePort.flow.fixip}[Action]{output=localPort.ofPort}
    --flowGenerator.deleteNlbNat
        --pipeline.DeleteNlbNat
            -- [flowmod]{table=FLOW_TABLE_NLBNAT,priority=low}[match]{metadata=nlbNat.targetMetadata,dst_mac=nlbNat.targetMac,src_mac=nlbNat.targetPort:00:00:00/ff:ff:ff:ff:ff:ff,dst_ip=nlbNat.nlbIp,reg11=NLBNAT_BEGIN,mac_proto=ETH_PROTO_IPV4,ip_proto=IP_PROTO_TCP,dst_tcp_port=nlbNat.nlbPort}[instruction]{goto_table=FLOW_TABLE_L2LOOKUP;apply_action:load=0xfa163e->src_mac(ts=25,te=48),move=src_mac->XXRegister0(ts=65,len=48),move=dst_ip->XXRegister0(ts=1,len=32),move=dst_tcp_port->XXRegister0(ts=33,len=16),set_dst_ip=nlbNat.targetIp,set_tcp_port=nlbNat.targetPort,set_reg11=NLBNAT_DNAT,*set_metadata=nlbNat.nlbMetadata,*set_dst_mac=nlbNat.nlbGwMac}
            -- [flowmod]{table=FLOW_TABLE_NLBNAT,priority=low}[match]{metadata=nlbNat.targetMetadata,mac_proto=ETH_PROTO_IPV4,reg3=nlbNat.nlbIp,reg2=nlbNat.nlbPort,src_ip=nlbNat.targetIp,ip_proto=IP_PROTO_TCP,src_tcp_port=nlbNat.targetPort,reg11=NLBNAT_DNAT}[instruction]{goto_table=FLOW_TABLE_L2LOOKUP;apply_action:set_dst_mac=nlbNat.targetGwMac,set_reg11=NLBNAT_FWD}
            -- [flowmod]{table=FLOW_TABLE_NLBNAT,priority=low}[match]{metadata=nlbNat.nlbMetadata,mac_proto=ETH_PROTO_IPV4,reg3=nlbNat.nlbIp,reg2=nlbNat.nlbPort,src_ip=nlbNat.targetIp,ip_proto=IP_PROTO_TCP,src_tcp_port=nlbNat.targetPort,reg11=NLBNAT_FWD_END/NLBNAT_DNAT}[instruction]{goto_table=FLOW_TABLE_L2LOOKUP;apply_action:move=XXRegister0->dst_mac(fs=65,len=48),set_src_ip=nlbNat.nlbIp,set_src_tcp_port=nlbNat.nlbPort,set_reg11=NLBNAT_SNAT}
    --flowGenerator.updateNlbNat
        --pipeline.UpdateNlbNat
            -- [flowmod]{table=FLOW_TABLE_NLBNAT,priority=low}[match]{metadata=nlbNat.targetMetadata,dst_mac=nlbNat.targetMac,src_mac=nlbNat.targetPort:00:00:00/ff:ff:ff:ff:ff:ff,dst_ip=nlbNat.nlbIp,reg11=NLBNAT_BEGIN,mac_proto=ETH_PROTO_IPV4,ip_proto=IP_PROTO_TCP,dst_tcp_port=nlbNat.nlbPort}[instruction]{goto_table=FLOW_TABLE_L2LOOKUP;apply_action:load=0xfa163e->src_mac(ts=25,te=48),move=src_mac->XXRegister0(ts=65,len=48),move=dst_ip->XXRegister0(ts=1,len=32),move=dst_tcp_port->XXRegister0(ts=33,len=16),set_dst_ip=nlbNat.targetIp,set_tcp_port=nlbNat.targetPort,set_reg11=NLBNAT_DNAT,*set_metadata=nlbNat.nlbMetadata,*set_dst_mac=nlbNat.nlbGwMac}
            -- [flowmod]{table=FLOW_TABLE_NLBNAT,priority=low}[match]{metadata=nlbNat.targetMetadata,mac_proto=ETH_PROTO_IPV4,reg3=nlbNat.nlbIp,reg2=nlbNat.nlbPort,src_ip=nlbNat.targetIp,ip_proto=IP_PROTO_TCP,src_tcp_port=nlbNat.targetPort,reg11=NLBNAT_DNAT}[instruction]{goto_table=FLOW_TABLE_L2LOOKUP;apply_action:set_dst_mac=nlbNat.targetGwMac,set_reg11=NLBNAT_FWD}
            -- [flowmod]{table=FLOW_TABLE_NLBNAT,priority=low}[match]{metadata=nlbNat.nlbMetadata,mac_proto=ETH_PROTO_IPV4,reg3=nlbNat.nlbIp,reg2=nlbNat.nlbPort,src_ip=nlbNat.targetIp,ip_proto=IP_PROTO_TCP,src_tcp_port=nlbNat.targetPort,reg11=NLBNAT_FWD_END/NLBNAT_DNAT}[instruction]{goto_table=FLOW_TABLE_L2LOOKUP;apply_action:move=XXRegister0->dst_mac(fs=65,len=48),set_src_ip=nlbNat.nlbIp,set_src_tcp_port=nlbNat.nlbPort,set_reg11=NLBNAT_SNAT}
    --flowGenerator.deleteNlbDr
        --pipeline.DeleteNlbDr
            -- [flowmod]{table=FLOW_TABLE_L3LOOKUP,priority=lowest}[match]{mac_proto=ETH_PROTO_IPV4,tunnel_id=nlbDr.vni,dst_mac=nlbDr.targetMac}[instruction]{goto_table=FLOW_TABLE_DISPATCHER;apply_action:set_reg5=nlbDr.vni,set_metadata=nlbDr.targetMetadata}
    --flowGenerator.updateNlbDr
        -pipeline.UpdateNlbDr
            -- [flowmod]{table=FLOW_TABLE_L3LOOKUP,priority=lowest}[match]{mac_proto=ETH_PROTO_IPV4,tunnel_id=nlbDr.vni,dst_mac=nlbDr.targetMac}[instruction]{goto_table=FLOW_TABLE_DISPATCHER;apply_action:set_reg5=nlbDr.vni,set_metadata=nlbDr.targetMetadata}
--flowGenerator. DeleteSubnetCache
    --flowGenerator.deleteDhcpPort
        --pipeline.DeleteDhcpPort
            -- [map]delete dhcpResp.info[dhcpPort.subnetMetadata]
            -- [map]delete routerAdvertisement.dhcpPorts[dhcpPort.subnetMetadata]
    --flowGenerator.deleteLocalPort
        --pipeline.DeleteLocalPort
            -- [map]delete arpResp.localPorts[localPort.id]
            -- [map]delete localPort.metadataProxy[localPort.id]
            -- ovs comman : "ovs-vsctl del-port %s"
            -- [map]delete routerAdvertisement.localPorts[localPort.id]
    --flowGenerator.deleteRemotePort
        --pipeline.deleteRemotePort
            -- [map]delete arpResp.remotePorts[remotePort.id]
    --flowGenerator.deleteNlbNat
        --pipeline.DeleteNlbNat
             -- [flowmod]{table=FLOW_TABLE_NLBNAT,priority=low}[match]{metadata=nlbNat.targetMetadata,dst_mac=nlbNat.targetMac,src_mac=nlbNat.targetPort:00:00:00/ff:ff:ff:ff:ff:ff,dst_ip=nlbNat.nlbIp,reg11=NLBNAT_BEGIN,mac_proto=ETH_PROTO_IPV4,ip_proto=IP_PROTO_TCP,dst_tcp_port=nlbNat.nlbPort}[instruction]{goto_table=FLOW_TABLE_L2LOOKUP;apply_action:load=0xfa163e->src_mac(ts=25,te=48),move=src_mac->XXRegister0(ts=65,len=48),move=dst_ip->XXRegister0(ts=1,len=32),move=dst_tcp_port->XXRegister0(ts=33,len=16),set_dst_ip=nlbNat.targetIp,set_tcp_port=nlbNat.targetPort,set_reg11=NLBNAT_DNAT,*set_metadata=nlbNat.nlbMetadata,*set_dst_mac=nlbNat.nlbGwMac}
             -- [flowmod]{table=FLOW_TABLE_NLBNAT,priority=low}[match]{metadata=nlbNat.targetMetadata,mac_proto=ETH_PROTO_IPV4,reg3=nlbNat.nlbIp,reg2=nlbNat.nlbPort,src_ip=nlbNat.targetIp,ip_proto=IP_PROTO_TCP,src_tcp_port=nlbNat.targetPort,reg11=NLBNAT_DNAT}[instruction]{goto_table=FLOW_TABLE_L2LOOKUP;apply_action:set_dst_mac=nlbNat.targetGwMac,set_reg11=NLBNAT_FWD}
             -- [flowmod]{table=FLOW_TABLE_NLBNAT,priority=low}[match]{metadata=nlbNat.nlbMetadata,mac_proto=ETH_PROTO_IPV4,reg3=nlbNat.nlbIp,reg2=nlbNat.nlbPort,src_ip=nlbNat.targetIp,ip_proto=IP_PROTO_TCP,src_tcp_port=nlbNat.targetPort,reg11=NLBNAT_FWD_END/NLBNAT_DNAT}[instruction]{goto_table=FLOW_TABLE_L2LOOKUP;apply_action:move=XXRegister0->dst_mac(fs=65,len=48),set_src_ip=nlbNat.nlbIp,set_src_tcp_port=nlbNat.nlbPort,set_reg11=NLBNAT_SNAT}
     --[map]delete flowGenerator.subnetCache[subnet.id]


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------









